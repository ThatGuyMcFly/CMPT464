/**
 * CMPT464 Lab 4 Exercise 1
 * Martin Knoetze
 * SN: 3086754
 *
 * uart_module.c
 */

#include "uart_module.h"

void convert_to_char(uint32_t data, char * characters) {

    int digit_1 = data / 10;
    int digit_2 = data - digit_1 * 10;

    char character1 = '0' + digit_1;
    char character2 = '0' + digit_2;

    characters[0] = character1;
    characters[1] = character2;
}

void uart_send_data(uint32_t data) {
    char characters[] = "   C\n\r";

    convert_to_char(data, characters);

    int length = sizeof(characters)/sizeof(char);

    for (int i = 0; i < length; i++) {
        UARTCharPut(UART0_BASE, (uint8_t) characters[i]);
    }
}

void uart_setup() {
    PRCMPowerDomainOn(PRCM_DOMAIN_SERIAL);
    while(PRCMPowerDomainStatus(PRCM_DOMAIN_SERIAL)!= PRCM_DOMAIN_POWER_ON);

    // Set timer to be active in run and sleep mode
    PRCMPeripheralRunEnable(PRCM_PERIPH_UART0);
    PRCMPeripheralSleepEnable(PRCM_PERIPH_UART0);

    PRCMLoadSet();
    while(!PRCMLoadGet());

    IOCPinTypeUart(UART0_BASE, IOID_2, IOID_3, IOID_UNUSED, IOID_UNUSED);

    UARTDisable(UART0_BASE);

    uint32_t config = UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_ONE | UART_CONFIG_PAR_NONE;

    UARTConfigSetExpClk(UART0_BASE, 48000000, 9600, config);

    UARTHwFlowControlDisable(UART0_BASE);

    UARTEnable(UART0_BASE);
}
